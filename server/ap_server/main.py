# generated by fastapi-codegen:
#   filename:  openapi.json
from __future__ import annotations

import os
import logging
from fastapi.responses import FileResponse
import uvicorn

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

from routers import runs, stateless_runs, store, threads, human_in_loop

# Configure logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

def create_app():
    app = FastAPI(title="Agentic DB API", description="API for managing Agentic DB",
                  version="0.1.0")

    app = FastAPI(
        title="Agent Protocol",
        version="0.1.1",
    )

    add_handlers(app)
    app.include_router(runs.router)
    app.include_router(stateless_runs.router)
    app.include_router(store.router)
    app.include_router(threads.router)
    app.include_router(human_in_loop.router)

    # Set all CORS enabled origins
    app.add_middleware(
        CORSMiddleware,
        allow_origins=["*"],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
        expose_headers=["*"],
    )

    return app


def add_handlers(app: FastAPI):
    @app.get("/")
    async def root():
        return {"message": "Gateway of the App"}

    @app.get('/favicon.ico', include_in_schema=False)
    async def favicon():
        file_name = "favicon.ico"
        file_path = os.path.join(app.root_path, "", file_name)
        return FileResponse(path=file_path, headers={"Content-Disposition": "attachment; filename=" + file_name})


if __name__ == "__main__":
    app = create_app()
    logging.info("Starting Agentic DB API...")
    uvicorn.run(app, host="0.0.0.0", port=8123, log_level="info")
    logging.info("Application shutdown")
