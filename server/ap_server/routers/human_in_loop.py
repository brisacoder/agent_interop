# generated by fastapi-codegen:
#   filename:  openapi.json

from __future__ import annotations

from fastapi import APIRouter, HTTPException, Response, status
from autogen_agent_util.human_in_loop import autogen_agent_human_in_loop
from models import Any, ErrorResponse, RunCreateStateless, Union

router = APIRouter(tags=["Stateless Runs"])


@router.post(
    "/runs/human_in_loop",
    response_model=Any,
    responses={
        "404": {"model": ErrorResponse},
        "409": {"model": ErrorResponse},
        "422": {"model": ErrorResponse},
    },
    tags=["Stateless Runs"],
)
# async function because autogen_agent_util is async
async def run_stateless_runs_post_human_in_loop(body: RunCreateStateless) -> Union[Any, ErrorResponse]:
    """
    Asynchronously processes a stateless run request and returns the result.

    Args:
        body (RunCreateStateless): The request body containing the run details.

    Returns:
        Union[Any, ErrorResponse]: The result of the run or an error response.
    """
    # Extract the query input from the request body.
    query_input = body.input[0]['query'] if isinstance(body.input, list) else body.input['query']
    print(f"Received query: {query_input}")
    # Run the autogen agent with the extracted query input and await the output of humnan_in_loop.
    output_data = await autogen_agent_human_in_loop(query_input)
    print(f"Output: {output_data}")

    return {"query": query_input, "output": output_data}
